---

#############################
#                           #
#     ADD CLIENT PROCESS    #
#                           #
#############################

- name: Defining some stuff
  ansible.builtin.set_fact:
    - endpoint: '{{ server_pub_ip }}:{{ server_port }}'

- name: register file wg conf out
  ansible.builtin.command: cat /etc/wireguard/{{ server_wg_nic }}.conf
  register: wgConf

- name: Failing if client name exists
  ansible.builtin.fail:
  when: wgConf.stdout | search("{{ client_name }}")

- name: Generating client private key
  ansible.builtin.command: wg genkey
  register: client_private_key
  no_log: true

- name: Generating client public key
  ansible.builtin.shell: echo "{{ client_private_key.stdout }}" | wg pubkey
  register: client_public_key

- name: Generating client psk
  ansible.builtin.command: wg genpsk
  register: client_psk
  no_log: true

- name: register file wg conf out
  ansible.builtin.command: cat /etc/wireguard/params
  register: wgParams

- name: Grabbing server's public key
  ansible.builtin.set_fact:
    - server_public_key: "{{ wgParams.stdout | regex_search('(?<=SERVER_PUB_KEY=)(.*)') }}"

- name: Templating conf file for our client
  ansible.builtin.template:
    src: conf.j2
    dest: /etc/wireguard/{{ client_name }}.conf

- name: Appending new peer to our servers conf file
  ansible.builtin.blockinfile:
    path: /etc/wireguard/{{ server_wg_nic }}.conf
    block: |
      ### Client {{ client_name }}
      [Peer]
      PublicKey = {{ client_public_key }}
      PresharedKey = {{ client_psk.stdout }}
      AllowedIPs = {{ client_private_ip }}/32

